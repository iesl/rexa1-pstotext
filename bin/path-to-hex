#!/bin/env perl

use strict; 
use Getopt::Long qw(:config bundling no_ignore_case pass_through);
use POSIX;

#======================= [ Forward Decls ] =======================

sub hexToPath($);
sub pathToHex($);
sub incHexstr($$);

#======================= [ syntax ] =======================
sub syntax () {
  print <<EOS;
  sgeRunPstotext: [--taskid <n>]
EOS
}


#======================= [  ] =======================

my %options=();
GetOptions(
     "p2h=s"      => \$options{p2h},
     "h2p=s"      => \$options{h2p},
     "hplus"    => \$options{hplus},
    );



{
  #================= [ Main ] =======================
  {
    if (defined ( $options{h2p} )) {
       my $s = $options{h2p};
       # print ("++", hexToPath($s), "\n");
       print  hexToPath($s), "\n";
    }
  }


  #======================= [ hexToPath ] =======================
  sub hexToPath($) {
    my ($hex) = @_;
    my $path = $hex;
    my $hd = "[A-Fa-f0-9]";
    $path =~ s!($hd)!$1/!g;
    $path =~ s!/$!!g;
    return $path;
  }

  #======================= [ pathToHex ] =======================
  sub pathToHex($) {
    my ($path) = @_;
    $path =~ s!/!!g;
    return $path;
  }

  #================= [ incHexstr ] =======================
  sub incHexstr($$) {
    my ($hexs, $inc) = @_;
    my $decn = hex ( "$hexs" ) + $inc;
    $hexs = sprintf( "%0" . length( $hexs ) . "X", $decn );
    return "$hexs";
  }

}
